<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_13258_applicat_0.GetAppArtifacts</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GetAppArtifacts</name>
        <script><![CDATA[var GetAppArtifacts = Class.create();
GetAppArtifacts.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getAppArtifacts: function(appID) {
        try {
            var inputs = {};
            inputs['app_id'] = appID.toString();
            var result = sn_fd.FlowAPI.getRunner().action('x_13258_applicat_0.get_application_artifacts').inForeground().withInputs(inputs).run();
            var outputs = result.getOutputs();
            var response = outputs['response'];
            var resultObj = {};
            resultObj.artifacts = response.artifacts;
            resultObj.meta_data = response.metadata;
            resultObj.instance_name = gs.getProperty('instance_name');
            return resultObj;
        } catch (ex) {
            gs.error(ex);
        }
    },

    preprocess: function(artifacts) {
        var filtered = artifacts.filter(function(item) {
            return item.types.some(function(type) {
                return type.artifacts && type.artifacts.length > 0 ? true : false;
            });
        }).map(function(item) {
            item.types = item.types.filter(function(type) {
                return type.artifacts && type.artifacts.length > 0 ? true : false;
            });
			return item;
        });
        return filtered;
        //         var processed = filtered.map(function(item) {
        //             var res = item;
        //             item.types.forEach(function(type, typeIdx) {
        //                 type.artifacts.forEach(function(artifact, artIdx) {
        //                     var isCustom = false;
        //                     if (this._isCustomizedArtifact(type.id, artifact.sysId)) {
        //                         isCustom = true;
        //                     }
        //                     res.types[typeIdx].artifacts[artIdx].isCustomized = isCustom;
        //                 }, this);
        //             }, this);
        //             return res;
        //         }, this);
        //         return processed;
    },

    _isCustomizedArtifact: function(type, artifactID) {
        if (gs.nil(type))
            type = this.getParameter('sysparm_type');
        if (gs.nil(artifactID))
            artifactID = this.getParameter('sysparm_artifact_id');
        if (gs.nil(artifactID))
            return false;
        var grSUV = new GlideRecord('sys_update_version');
        grSUV.addEncodedQuery("state=current^name=" + type + '_' + artifactID);
        grSUV.orderByDesc('sys_recorded_at');
        grSUV.query();
        if (grSUV.next()) {
            if (grSUV.source_table == 'sys_update_set') {
                return true;
            }
        }
        return false;
    },
    type: 'GetAppArtifacts'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-14 12:51:32</sys_created_on>
        <sys_id>92854fa707d721102b80fe4f7c1ed01b</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>GetAppArtifacts</sys_name>
        <sys_package display_value="Application Explorer" source="x_13258_applicat_0">52fee90207db61102b80fe4f7c1ed041</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application Explorer">52fee90207db61102b80fe4f7c1ed041</sys_scope>
        <sys_update_name>sys_script_include_92854fa707d721102b80fe4f7c1ed01b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-17 10:44:00</sys_updated_on>
    </sys_script_include>
</record_update>
