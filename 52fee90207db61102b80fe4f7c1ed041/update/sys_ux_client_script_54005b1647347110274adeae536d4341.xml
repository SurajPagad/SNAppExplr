<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Default copy">03eacc2007bb61102b80fe4f7c1ed036</macroponent>
        <name>content_tree_1/items</name>
        <preset/>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {TransformApiHelpers} params.helpers
 */
function evaluateProperty({
    api,
    helpers
}) {
    var artifactType = {};
    var artifactSubTypes = [];
    var artifactSubType = {};
    var artifact = {};
    var artifacts = [];
    var searchArtifactTerm = api.state.searchArtifactTerm;
    var artifactTypes = api.data.get_app_artifacts_1.output.result.artifacts;
    console.log(artifactTypes);
    var result = artifactTypes.map(function(artifactTypeEle) {
        artifactType = {};
        artifactType.label = artifactTypeEle.name;
        artifactType.id = artifactTypeEle.id;
        artifactSubTypes = [];
        artifactSubTypes = artifactTypeEle.types.map(function(artifactSubTypeEle) {
            artifactSubType = {};
            artifactSubType.id = artifactSubTypeEle.id;
            artifactSubType.label = artifactSubTypeEle.pluralName;
            artifacts = [];
            artifacts = artifactSubTypeEle.artifacts.map(function(artifactEle) {
                artifact = {};
                artifact.id = artifactEle.id;
                artifact.label = artifactEle.name;
                artifact.sys_id = artifactEle.sysId;
                return artifact;
            });
            artifactSubType.children = artifacts;
            return artifactSubType;
        });
        artifactType.children = artifactSubTypes;
        return artifactType;
    });
    if (!searchArtifactTerm) {
        return result;
    }
    //return result;
    var filtered = [];
    filtered = result.map((element, idx) => {
        return {
            ...element,
            children: element.children.map((type) => {
                return {
                    ...type,
                    children: type.children.filter((art) => art.label.toLowerCase().indexOf(searchArtifactTerm) > -1)
                };
            }).filter((type) => type.children.length > 0)
        };
    }).filter((element) => element.children.length > 0);
    return filtered;
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-24 05:58:44</sys_created_on>
        <sys_id>54005b1647347110274adeae536d4341</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>content_tree_1/items</sys_name>
        <sys_package display_value="Application Explorer" source="x_13258_applicat_0">52fee90207db61102b80fe4f7c1ed041</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application Explorer">52fee90207db61102b80fe4f7c1ed041</sys_scope>
        <sys_update_name>sys_ux_client_script_54005b1647347110274adeae536d4341</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-10-29 14:16:05</sys_updated_on>
        <target>macroponent</target>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
